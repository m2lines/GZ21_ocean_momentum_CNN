name: CI
on:
  push:
    branches:
    - main
    - main-new
  pull_request:
    types:
    - synchronize
    - opened
    - reopened

jobs:

  # Run the black code checker
  black:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: psf/black@stable

  build:
    # Build with multiple (recent) versions of python on latest OSs
    name: Build (${{ matrix.python-version }} | ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.10"]
        include:
        - os: ubuntu-latest
          python-version: "3.9"
        - os: ubuntu-latest
          python-version: "3.8"
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint>=2.16 mypy>=1.0 pydocstyle>=6.3 pytest
        python -m pip install .
    
    - name: Lint with pylint
      if: always()
      run: pylint --disable=all --enable=unused-import .

    - name: mypy 
      if: always()
      run: mypy --strict .

    - name: Check Docstrings
      if: always()
      run: pydocstyle --convention=numpy .

    - name: Run tests
      if: always()
      run: pytest .
